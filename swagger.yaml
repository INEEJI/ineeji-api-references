swagger: "2.0"
info:
  version: "1.0.21"
  title: "EEJI Cloudfnt-Backend API Reference"
  description: This document represents API reference of the EEJI Cloudfnt-Backend service.
  license:
    name: MIT
    url: https://github.com/apiaryio/polls-api/blob/master/LICENSE
host: cloudfnt-bnd-prod.infinite-optimal.com
basePath: /api
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  
  /v1/xai_result/count/{model_id}:
    x-summary: Total XAI row count
    get:
      summary: Get total row count of XAI result
      tags:
        - XAI
      parameters:
        - name: "model_id"
          in: "path"
          type: "string"
          required: true
          description: "model id"
        - name: "user-id"
          in: "header"
          type: "string"
          required: true
          description: "user id"
        - name: "company-id"
          in: "header"
          type: "string"
          required: true
          description: "company id"
        - name: "Authorization"
          in: "header"
          type: "string"
          required: true
          description: "auth token"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/xai_result_count"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/resp_unauthorized"
        500:
          description: "Internal server error"

  /v1/xai_result/{model_id}:
    x-summary: XAI result based on conditions
    get:
      summary: Get XAI result based on conditions(offset, limit)
      tags:
        - XAI
      parameters:
        - name: "model_id"
          in: "path"
          type: "string"
          required: true
          description: "model id"
        - name: "offset"
          in: "query"
          type: "string"
          required: true
          description: "start index"
        - name: "limit"
          in: "query"
          type: "string"
          required: true
          description: "count of data(i.e. page size)"
        - name: "user-id"
          in: "header"
          type: "string"
          required: true
          description: "user id"
        - name: "company-id"
          in: "header"
          type: "string"
          required: true
          description: "company id"
        - name: "Authorization"
          in: "header"
          type: "string"
          required: true
          description: "auth token"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            items:
              type: "object"
              $ref: "#/definitions/xai_result"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/resp_unauthorized"
        500:
          description: "Internal server error"

  /v1/save_new/{object_name}:
    x-summary: Save new dataset
    post:
      summary: Save new dataset
      tags:
        - Data
      parameters:
        - name: "object_name"
          in: "path"
          type: "string"
          required: true
          description: "object name to save"
        - name: "company-id"
          in: "header"
          type: "string"
          required: true
          description: "company id"
        - name: "user-id"
          in: "header"
          type: "string"
          required: true
          description: "user id"
        - name: "Authorization"
          in: "header"
          type: "string"
          required: true
          description: "auth token"
        - name: "body"
          in: body
          description: save_new request body
          required: true
          schema:
            type: "object"
            $ref: "#/definitions/new_dataset"
      responses:
        200:
          description: "OK"
          schema:
            type: object
            properties:
              state:
                type: string
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/resp_unauthorized"
        422:
          description: "Unprocessable Entity"
        500:
          description: "Internal server error"

  /v1/list_model:
    x-summary: List models 
    get:
      summary: Get paginated list of models owned by a user
      tags:
        - Model
      parameters:
        - name: "user-id"
          in: "header"
          type: "string"
          required: true
          description: "user id"
        - name: "Authorization"
          in: "header"
          type: "string"
          required: true
          description: "auth token"
        - name: "offset"
          in: "query"
          type: "string"
          required: true
          description: "start index(from 0)"
        - name: "limit"
          in: "query"
          type: "string"
          required: true
          description: "count of data(i.e. page size)"
      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              type: "object"
              $ref: "#/definitions/model_summary"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/resp_unauthorized"
        422:
          description: "Unprocessable Entity"
        500:
          description: "Internal server error"

  /v1/describe_model/{model_id}:
    x-summary: Describe a model
    get:
      summary: Describe a model
      tags:
        - Model
      parameters:
        - name: "model_id"
          in: "path"
          type: "string"
          required: true
          description: "model id"
        - name: "user-id"
          in: "header"
          type: "string"
          required: true
          description: "user id"
        - name: "company-id"
          in: "header"
          type: "string"
          required: true
          description: "company id"
        - name: "Authorization"
          in: "header"
          type: "string"
          required: true
          description: "auth token"
        - name: "EEJI-Test-Code"
          in: "header"
          type: "string"
          required: false
          description: "custom header for testing"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/model_information"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/resp_unauthorized"
        422:
          description: "Unprocessable Entity"
        500:
          description: "Internal server error"

  /v1/rename_model/{model_id}:
      x-summary: Rename model name
      patch:
        summary: Rename model name
        tags:
          - Model
        parameters:
          - name: "model_id"
            in: "path"
            type: "string"
            required: true
            description: "model id"
          - name: "user-id"
            in: "header"
            type: "string"
            required: true
            description: "user id"
          - name: "company-id"
            in: "header"
            type: "string"
            required: true
            description: "company id"
          - name: "Authorization"
            in: "header"
            type: "string"
            required: true
            description: "auth token"
          - name: "body"
            in: body
            description: model name to update
            required: true
            schema:
              type: "object"
              $ref: "#/definitions/model_name"
        responses:
          200:
            description: "OK"
            schema:
              type: object
              properties:
                state:
                  type: string
          400:
            description: "Bad Request"
            schema:
              $ref: "#/definitions/resp_bad_request"
          401:
            description: "Unauthorized"
            schema:
              $ref: "#/definitions/resp_unauthorized"
          500:
            description: "Internal server error"

  /v1/delete_model/{model_id}:
      x-summary: Delete model name
      post:
        summary: Delete model name
        tags:
          - Model
        parameters:
          - name: "model_id"
            in: "path"
            type: "string"
            required: true
            description: "model id"
          - name: "user-id"
            in: "header"
            type: "string"
            required: true
            description: "user id"
          - name: "company-id"
            in: "header"
            type: "string"
            required: true
            description: "company id"
          - name: "Authorization"
            in: "header"
            type: "string"
            required: true
            description: "auth token"
        responses:
          200:
            description: "OK"
            schema:
              type: object
              properties:
                state:
                  type: string
          400:
            description: "Bad Request"
            schema:
              $ref: "#/definitions/resp_bad_request"
          401:
            description: "Unauthorized"
            schema:
              $ref: "#/definitions/resp_unauthorized"
          500:
            description: "Internal server error"

  /v1/get_signed_url/{object_name}:
    x-summary: Get a signed URL
    get:
      summary: Get a signed URL to upload data
      tags:
        - Data
      parameters:
        - name: "company-id"
          in: "header"
          type: "string"
          required: true
          description: "company id"
        - name: "user-id"
          in: "header"
          type: "string"
          required: true
          description: "user id"
        - name: "Authorization"
          in: "header"
          type: "string"
          required: true
          description: "auth token"
        - name: "object_name"
          in: "path"
          required: true
          type: "string"
          description: "object name to upload"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/get_signed_url"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/resp_unauthorized"
        422:
          description: "Unprocessable Entity"
        500:
          description: "Internal server error"

  /v1/notify_upload/{object_name}:
    x-summary: Notify upload status
    post:
      summary: Notify user-data upload status
      tags:
        - Data
      parameters:
        - name: "object_name"
          in: "path"
          required: true
          type: "string"
          description: "object name"
        - name: "company-id"
          in: "header"
          type: "string"
          required: true
          description: "company id"
        - name: "user-id"
          in: "header"
          type: "string"
          required: true
        - name: "Authorization"
          in: "header"
          type: "string"
          required: true
        - name: "status"
          in: "query"
          type: "string"
          enum: [start, fail, cancel, success]
          required: true
        - name: "object-size"
          in: "header"
          type: "number"
          required: false
          description: "upload object size in bytes. Allowed only when status=success"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties:
              state:
                type: string
                description: "Current State"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/resp_unauthorized"
        422:
          description: "Unprocessable Entity"
        500:
          description: "Internal server error"
          
  /v1/get_model_download_url/{model_id}: 
    x-summary: Get a signed download URL
    get:
      summary: Get a signed download URL to model result
      tags:
        - Model
      parameters:
        - name: "company-id"
          in: "header"
          type: "string"
          required: true
          description: "company id"
        - name: "user-id"
          in: "header"
          type: "string"
          required: true
          description: "user id"
        - name: "Authorization"
          in: "header"
          type: "string"
          required: true
          description: "auth token"
        - name: "model_id"
          in: "path"
          required: true
          type: "string"
          description: "model ID to download result"
        - name: "isxai"
          in: "header"
          type: "boolean"
          required: true
          description: "xai result or not (True: xai, False: trained model)"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/get_model_download_signed_url"
        500:
          description: "Internal server error"

definitions:
  xai_result_count:
    title: xai_result_count
    type: "object"
    required:
      - "xai_result_count"
    properties:
      xai_result_count:
        type: "number"
        description: "Total XAI row count"

  xai_result:
    title: xai_result
    type: "object"
    required:
      - "xai_pdp"
      - "feature_length"
      - "feature_list"
      - "xai_global"
      - "xai_local"
      - "sample_size"
      - "predict_result"
      - "input_data"
    properties:
      xai_pdp:
        type: "boolean"
        description: "The pdp result by features"
      feature_length:
        type: "number"
        description: "The number of features"
      feature_list:
        type: "array"
        description: "The full list of features"
        items: 
          type: "number"
      xai_global:
        type: "object"
        description: "The data to visualize xai(global)"
      xai_local:
        type: "object"
        description: "The data to visualize xai(local)"
      sample_size:
        type: "number"
        description: "The sample size"
      predict_result:
        type: "object"
        description: "The prediction result"
      input_data:
        type: "object"
        description: "The input data"

  new_dataset:
    title: new_dataset
    type: "object"
    required:
      - "data_name"
    properties:
      is_classification:
        type: "boolean"
        description: "(optional) flag indicating whether the data is classification (default: False)"
      target_y:
        type: "string"
        description: "(optional) The target column"
      data_name:
        type: "string"
        description: "The dataset name"
      data_desc:
        type: "string"
        description: "(optional) The dataset description"
      date_column:
        type: "string"
        description: "(optional) The date column"

  model_information:
    title: model_information
    type: "object"
    required:
      - "id"
      - "name"
      - "description"
      - "target"
      - "state"
      - "created_at"
      - "updated_at"
      - "dataset_name"
    properties:
      id:
        type: "string"
        description: "The model ID"
      name:
        type: "string"
        description: "The name of the model"
      description:
        type: "string"
        description: "The description of the model"
      target:
        type: "string"
        description: "The target of the model - classification/prediction"
      state:
        type: "string"
        description: "The status of the model"
      created_at:
        type: "string"
        description: "The datetime when the model is created (ISO format)"
      updated_at:
        type: "string"
        description: "The datetime when the model is updated (ISO format)"
      dataset_name:
        type: "string"
        description: "The name of dataset"
      accuracy:
        type: "number"
        description: "The model accuracy"
      error_rate:
        type: "number"
        description: "The error rate"

  model_summary:
    title: model_summary
    type: "object"
    required:
      - "id"
      - "name"
      - "target"
      - "is_classification"
      - "state"
      - "created_at"
      - "error_code"
    properties:
      id:
        type: "string"
        description: "The model ID"
      name:
        type: "string"
        description: "The name of the model"
      target:
        type: "string"
        description: "The target of the model"
      is_classification:
        type: "boolean"
        description: "The flag indicating whether the model is classification (True: classification, False: regression)"
      state:
        type: "string"
        description: "The status of the model"
      created_at:
        type: "string"
        description: "The datetime when the model is created (ISO format)"
      error_code:
        type: "number"
        description: "A specific code identifying the reason for the failure in training."

  model_name:
    title: model_name
    type: "object"
    required:
      - "model_name"
    properties: 
      model_name:
        type: "string"
        description: "new model name to save"

  get_signed_url:
    title: get_signed_url
    type: "object"
    required:
      - "signed_url"
      - "expiration"
    properties:
      expiration:
        type: "string"
        description: "The expiration datetime of the signed url (ISO format)"
      signed_url:
        type: "string"
        description: "The signed url of the GCS object"
        
  get_model_download_signed_url:
    title: get_model_download_signed_url
    type: "object"
    required:
      - "signed_url"
      - "expiration"
    properties:
      expiration:
        type: "string"
        description: "The expiration datetime of the signed url (ISO format)"
      signed_url:
        type: "string"
        description: "The signed url of the GCS object"

  resp_bad_request:
    type: "object"
    properties:
      message:
        type: string
        description: "Error reason"
  resp_unauthorized:
    type: "object"
    properties:
      message:
        type: string
        description: "Error reason"
